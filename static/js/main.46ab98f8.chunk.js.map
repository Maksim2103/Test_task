{"version":3,"sources":["Constats/Nationalities/nationalities.js","Components/TableNationality/TableNationality.js","Components/CopyToClipboardText/CopyToClipBoardText.js","Components/ContactsTable/EnhancedTableHead/EnhancedTableHead.js","Components/ContactsTable/ContactsTable.jsx","Components/Header/Header.jsx","Components/SearchPanel/SearhName/SearchName.jsx","Components/AutocomleteCustom/AutocompleteCustom.js","Components/SearchPanel/SearchPanel.jsx","Components/Constants/constants.js","Components/Footer/Footer.js","Components/PersonalCard/PersonalCard.jsx","Components/PaginationsPage/PaginationsPage.jsx","Components/HomePage/HomePage.js","Components/HomePage/useFetchData.js","App.js","index.js"],"names":["NATIONALITIES","AU","nat","color","bgcolor","shortName","BR","CA","CH","DE","DK","ES","FI","FR","GB","IE","IR","NO","NL","NZ","TR","US","TableNationality","person","Box","border","textAlign","useStyles","makeStyles","theme","buttonText","palette","info","main","display","justifyContent","alignItems","cursor","iconText","fontSize","marginRight","spacing","CopyToClipBoardText","text","classNamees","useCopyToClipboard","copyToClipboard","useState","statusCopy","setStatusCopy","onClickCopy","useCallback","handleClickAway","ClickAwayListener","onClickAway","Tooltip","title","getToolTipsTitle","arrow","placement","Button","classNameName","type","onClick","root","width","paper","marginBottom","table","minWidth","visuallyHidden","clip","height","margin","overflow","padding","position","top","headCells","id","align","label","EnhancedTableHead","props","order","orderBy","onRequestSort","TableHead","TableRow","map","headCell","TableCell","sortDirection","TableSortLabel","active","direction","property","event","tableCell","descendingComparator","a","b","name","last","ContactsTable","data","setOrder","setOrderBy","sortData","array","comparator","stabilizedThis","el","index","sort","stableSort","getComparator","TableContainer","component","Paper","Table","aria-labelledby","aria-label","size","TableBody","hover","tabIndex","scope","Avatar","src","picture","thumbnail","first","Typography","format","parseISO","dob","date","age","email","phone","location","country","state","city","street","number","login","uuid","backgroundColor","light","selected","gridIcons","icons","Header","tableView","setTableView","reloadFetch","useEffect","localStorage","setItem","Grid","grid","variant","container","justify","ToggleButtonGroup","value","exclusive","onChange","_","nextView","ToggleButton","inputName","SearchName","getFullName","TextField","e","target","InputProps","endAdornment","InputAdornment","IconButton","AutocompleteCustom","keyVal","options","setValue","onInputChange","reason","includes","console","log","undefined","Autocomplete","getOptionSelected","option","renderInput","params","containerGrid","maxWidth","itemFilter","flexGrow","SearchPanel","setFiltered","helperOnChangeFilter","nationalityList","Object","entries","key","item","TABLE_VIEW_STATUS","GENDER_VALUE","MALE","FEMALE","INDETERMINATE","NOBODY","footerContainer","secondary","flexDirection","footerTableContainer","typographyPredominate","typograthyBox","rowFirstTable","tableCellGender","fontWeight","Footer","genderCollections","reduce","acc","gender","male","female","INDERMINATE","indeterminate","allNum","length","maleNum","femaleNum","indeterminateNum","nationalitiesCollections","filter","mainContainer","flexWrap","cardContainer","large","cardnameContainer","PersonalCard","aalign","cell","marginTop","PaginationsPage","pageCount","handleChangePage","page","Pagination","count","shape","TABLE","GRID","appGrid","getTableViewMode","getItem","HomePage","setData","isLoading","setIsLoading","isError","setIsError","countReload","setCountReload","fetch","response","json","results","error","Error","getContacts","useFetchData","filtered","currentPage","setCurrentPage","rowsPerPage","dataAfterFilter","useMemo","activeFilters","every","currentValue","values","join","helperFilteredData","dataPerPage","slice","totalRows","Math","ceil","xs","val","nationalities","transformNationality","CircularProgress","numPage","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.46ab98f8.chunk.js","sourcesContent":["export const NATIONALITIES = {\r\n  AU: {\r\n    nat: 'Australian',\r\n    color: 'white',\r\n    bgcolor: '#F98866',\r\n    shortName: 'AU',\r\n  },\r\n  BR: { nat: 'Brazilian', color: 'white', bgcolor: '#FF420E' },\r\n  CA: { nat: 'Canadian', color: 'white', bgcolor: '#80BD9E' },\r\n  CH: { nat: 'Chiness', color: '#444444', bgcolor: '#cfd8dc' },\r\n  DE: { nat: 'German', color: 'white', bgcolor: '#8d6e63' },\r\n  DK: { nat: 'Danish', color: 'MediumBlue', bgcolor: 'LightCyan' },\r\n  ES: { nat: 'Estonian', color: '#4a148c', bgcolor: '#e1bee7' },\r\n  FI: { nat: 'Finnish', color: '#880e4f', bgcolor: '#f48fb1' },\r\n  FR: { nat: 'French', color: '#b71c1c', bgcolor: '#ffcdd2' },\r\n  GB: { nat: 'British', color: '#0d47a1', bgcolor: '#bbdefb' },\r\n  IE: { nat: 'Irish', color: '#311b92', bgcolor: '#d1c4e9' },\r\n  IR: { nat: 'Iranian', color: '#d1c4e9', bgcolor: '#311b92' },\r\n  NO: { nat: 'Norwegian', color: '#e1f5fe', bgcolor: '#0277bd' },\r\n  NL: { nat: 'Dutch', color: '#e0f7fa', bgcolor: '#006064' },\r\n  NZ: { nat: 'Zelander', color: '#004d40', bgcolor: '#b2dfdb' },\r\n  TR: { nat: 'Turkish', color: '#f1f8e9', bgcolor: '#33691e' },\r\n  US: { nat: 'American', color: '#fff3e0', bgcolor: '#ef6c00' },\r\n};\r\n\r\n// export const NATIONALITIES = [\r\n//   {\r\n//     nat: 'Australian',\r\n//     color: 'white',\r\n//     bgcolor: '#F98866',\r\n//     shortName: 'AU',\r\n//   },\r\n//   { nat: 'Brazilian', color: 'white', bgcolor: '#FF420E', shortName: 'BR' },\r\n//   { nat: 'Canadian', color: 'white', bgcolor: '#80BD9E', shortName: 'CA' },\r\n//   { nat: 'Chiness', color: '#444444', bgcolor: '#cfd8dc', shortName: 'CH' },\r\n//   { nat: 'German', color: 'white', bgcolor: '#8d6e63', shortName: 'DE' },\r\n//   { nat: 'Danish', color: 'MediumBlue', bgcolor: 'LightCyan', shortName: 'DK' },\r\n//   { nat: 'Estonian', color: '#4a148c', bgcolor: '#e1bee7', shortName: 'ES' },\r\n//   { nat: 'Finnish', color: '#880e4f', bgcolor: '#f48fb1', shortName: 'FI' },\r\n//   { nat: 'French', color: '#b71c1c', bgcolor: '#ffcdd2', shortName: 'FR' },\r\n//   { nat: 'British', color: '#0d47a1', bgcolor: '#bbdefb', shortName: 'GB' },\r\n//   { nat: 'Irish', color: '#311b92', bgcolor: '#d1c4e9', shortName: 'IE' },\r\n//   { nat: 'Iranian', color: '#d1c4e9', bgcolor: '#311b92', shortName: 'IR' },\r\n//   { nat: 'Norwegian', color: '#e1f5fe', bgcolor: '#0277bd', shortName: 'NO' },\r\n//   { nat: 'Dutch', color: '#e0f7fa', bgcolor: '#006064', shortName: 'NL' },\r\n//   { nat: 'Zelander', color: '#004d40', bgcolor: '#b2dfdb', shortName: 'NZ' },\r\n//   { nat: 'Turkish', color: '#f1f8e9', bgcolor: '#33691e', shortName: 'TR' },\r\n//   { nat: 'American', color: '#fff3e0', bgcolor: '#ef6c00', shortName: 'US' },\r\n// ];\r\n","import { NATIONALITIES } from '../../Constats/Nationalities/nationalities';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nconst TableNationality = ({ person }) => {\r\n  const bgcolor = NATIONALITIES[person].bgcolor;\r\n  const color = NATIONALITIES[person].color;\r\n\r\n  return (\r\n    <Box\r\n      bgcolor={bgcolor}\r\n      color={color}\r\n      border={`1px solid ${color}`}\r\n      textAlign=\"center\"\r\n    >\r\n      {NATIONALITIES[person].nat}\r\n    </Box>\r\n  );\r\n};\r\nexport default TableNationality;\r\n","import { useCallback, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FileCopyOutlinedIcon from '@material-ui/icons/FileCopyOutlined';\r\nimport { useCopyToClipboard } from 'react-use';\r\nimport Button from '@material-ui/core/Button';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  buttonText: {\r\n    color: theme.palette.info.main,\r\n    display: 'flex',\r\n    justifyContent: 'flex-start',\r\n    alignItems: 'center',\r\n    cursor: 'pointer',\r\n  },\r\n  iconText: {\r\n    fontSize: 'medium',\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst CopyToClipBoardText = ({ text }) => {\r\n  const classNamees = useStyles();\r\n  const [, copyToClipboard] = useCopyToClipboard();\r\n  const [statusCopy, setStatusCopy] = useState('copy');\r\n\r\n  const getToolTipsTitle = () => {\r\n    switch (statusCopy) {\r\n      case 'copy':\r\n        return 'Copy';\r\n      case 'copied':\r\n        return 'Copied';\r\n      default:\r\n        return '';\r\n    }\r\n  };\r\n\r\n  const onClickCopy = useCallback(() => {\r\n    copyToClipboard(text);\r\n    setStatusCopy('copied');\r\n  }, [copyToClipboard, text]);\r\n\r\n  const handleClickAway = useCallback(() => {\r\n    setStatusCopy('copy');\r\n  }, [setStatusCopy]);\r\n\r\n  return (\r\n    <ClickAwayListener onClickAway={handleClickAway}>\r\n      <Tooltip title={getToolTipsTitle()} arrow placement=\"top\">\r\n        <Button\r\n          classNameName={classNamees.buttonText}\r\n          type=\"button\"\r\n          onClick={onClickCopy}\r\n        >\r\n          <FileCopyOutlinedIcon classNameName={classNamees.iconText} />\r\n          {text}\r\n        </Button>\r\n      </Tooltip>\r\n    </ClickAwayListener>\r\n  );\r\n};\r\n\r\nCopyToClipBoardText.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default CopyToClipBoardText;\r\n","import PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nconst headCells = [\r\n  { id: 'avatar', align: 'center', label: 'Avatar' },\r\n  { id: 'last', align: 'left', label: 'Full Name' },\r\n  { id: 'age', align: 'left', label: 'Birthday' },\r\n  { id: 'email', align: 'left', label: 'Email' },\r\n  { id: 'phone', align: 'left', label: 'Phone' },\r\n  { id: 'location', align: 'left', label: 'Location' },\r\n  { id: 'nationality', align: 'left', label: 'Nationality' },\r\n];\r\n\r\nexport default function EnhancedTableHead(props) {\r\n  const classNamees = useStyles();\r\n\r\n  const { order, orderBy, onRequestSort } = props;\r\n\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.align}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span classNameName={classNamees.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  onRequestSort: PropTypes.func.isRequired,\r\n};\r\n","import { useState } from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nimport TableNationality from '../TableNationality/TableNationality';\r\nimport CopyToClipBoard from '../CopyToClipboardText/CopyToClipBoardText';\r\nimport EnhancedTableHead from './EnhancedTableHead/EnhancedTableHead';\r\n\r\nimport { format } from 'date-fns';\r\nimport parseISO from 'date-fns/parseISO';\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  tableCell: {\r\n    fontSize: '16px',\r\n  },\r\n});\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (orderBy === 'phone' || orderBy === 'email') {\r\n    if (b[orderBy] < a[orderBy]) {\r\n      return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  }\r\n  if (orderBy === 'last') {\r\n    if (b.name.last < a.name.last) {\r\n      return -1;\r\n    }\r\n    if (b.name.last > a.name.last) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  }\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nexport default function ContactsTable({ data }) {\r\n  const classNamees = useStyles();\r\n\r\n  const [order, setOrder] = useState('');\r\n  const [orderBy, setOrderBy] = useState('');\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const sortData = stableSort(data, getComparator(order, orderBy));\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table\r\n        classNameName={classNamees.table}\r\n        aria-labelledby=\"tableTitle\"\r\n        aria-label=\"enhanced table\"\r\n        size=\"small\"\r\n      >\r\n        <EnhancedTableHead\r\n          onRequestSort={handleRequestSort}\r\n          order={order}\r\n          orderBy={orderBy}\r\n        />\r\n        <TableBody>\r\n          {sortData.map((person) => (\r\n            <TableRow hover tabIndex={-1} key={person.login.uuid}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                <Avatar src={person.picture.thumbnail} />\r\n              </TableCell>\r\n              <TableCell align=\"left\">\r\n                {person.name.title} {person.name.first} {person.name.last}\r\n              </TableCell>\r\n              <TableCell classNameName={classNamees.tableCell} align=\"left\">\r\n                <Typography>\r\n                  {format(parseISO(person.dob.date), 'EEEE, M/d/yyyy, K-mm a')}\r\n                </Typography>\r\n                <Typography>{person.dob.age} years</Typography>\r\n              </TableCell>\r\n              <TableCell classNameName={classNamees.tableCell} align=\"left\">\r\n                <CopyToClipBoard text={person.email}></CopyToClipBoard>{' '}\r\n              </TableCell>\r\n              <TableCell classNameName={classNamees.tableCell} align=\"left\">\r\n                <CopyToClipBoard text={person.phone}></CopyToClipBoard>\r\n              </TableCell>\r\n              <TableCell classNameName={classNamees.tableCell} align=\"left\">\r\n                <Typography>/{person.location.country}/</Typography>\r\n                <Typography>\r\n                  {person.location.state}, {person.location.city},\r\n                </Typography>\r\n                <Typography>\r\n                  {person.location.street.name}\r\n                  {person.location.street.number}\r\n                </Typography>\r\n              </TableCell>\r\n              <TableCell classNameName={classNamees.tableCell} align=\"right\">\r\n                <TableNationality person={person.nat} />\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import { useEffect } from 'react';\r\n\r\nimport { Box, Grid, Typography } from '@material-ui/core';\r\nimport ViewListIcon from '@material-ui/icons/ViewList';\r\nimport ViewModuleIcon from '@material-ui/icons/ViewModule';\r\nimport { Button } from '@material-ui/core';\r\nimport ToggleButton from '@material-ui/lab/ToggleButton';\r\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '&$selected': {\r\n      backgroundColor: theme.palette.info.light,\r\n      '&:hover': {\r\n        backgroundColor: theme.palette.info.main,\r\n      },\r\n    },\r\n  },\r\n  selected: {},\r\n\r\n  gridIcons: {\r\n    padding: theme.spacing(1),\r\n  },\r\n  icons: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst Header = ({ tableView, setTableView, reloadFetch }) => {\r\n  const classNamees = useStyles();\r\n\r\n  const handleChangeViewMode = (_, nextView) => {\r\n    if (nextView !== null) {\r\n      setTableView(nextView);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('tableViewMode', tableView);\r\n  }, [tableView]);\r\n\r\n  const handleReloadPage = () => {\r\n    reloadFetch();\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      justifyContent=\"space-between\"\r\n      alignItems=\"center\"\r\n      classNameName={classNamees.root}\r\n    >\r\n      <Grid classNameName={classNamees.grid}>\r\n        <Typography variant=\"h3\">Contacts</Typography>\r\n      </Grid>\r\n      <Grid\r\n        classNameName={classNamees.gridIcons}\r\n        container\r\n        direction=\"row\"\r\n        justify=\"flex-end\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Tooltip title=\"Reload page\" arrow>\r\n          <Button>\r\n            <RefreshIcon\r\n              classNameName={classNamees.icons}\r\n              fontSize=\"large\"\r\n              onClick={handleReloadPage}\r\n            />\r\n          </Button>\r\n        </Tooltip>\r\n        <ToggleButtonGroup\r\n          value={tableView}\r\n          exclusive\r\n          onChange={handleChangeViewMode}\r\n        >\r\n          <ToggleButton\r\n            classNamees={{\r\n              root: classNamees.root,\r\n              selected: classNamees.selected,\r\n            }}\r\n            value=\"grid\"\r\n            aria-label=\"grid\"\r\n          >\r\n            <Tooltip title=\"Grid view\" arrow>\r\n              <ViewModuleIcon />\r\n            </Tooltip>\r\n          </ToggleButton>\r\n\r\n          <ToggleButton\r\n            classNamees={{\r\n              root: classNamees.root,\r\n              selected: classNamees.selected,\r\n            }}\r\n            value=\"table\"\r\n            aria-label=\"table\"\r\n          >\r\n            <Tooltip title=\"Table view\" arrow>\r\n              <ViewListIcon />\r\n            </Tooltip>\r\n          </ToggleButton>\r\n        </ToggleButtonGroup>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  inputName: {\r\n    width: '100%',\r\n  },\r\n}));\r\n\r\nexport default function SearchName({ getFullName }) {\r\n  const classNamees = useStyles();\r\n\r\n  return (\r\n    <TextField\r\n      classNameName={classNamees.inputName}\r\n      variant=\"outlined\"\r\n      id=\"input-with-icon-textfield\"\r\n      label=\"Search by full name\"\r\n      onChange={(e) => {\r\n        getFullName(e.target.value);\r\n      }}\r\n      InputProps={{\r\n        endAdornment: (\r\n          <InputAdornment position=\"end\">\r\n            <IconButton>\r\n              <SearchIcon />\r\n            </IconButton>\r\n          </InputAdornment>\r\n        ),\r\n      }}\r\n    />\r\n  );\r\n}\r\n","import { useState, useCallback } from 'react';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    minWidth: '300px',\r\n  },\r\n}));\r\n\r\nexport default function AutocompleteCustom({\r\n  onChange,\r\n  label,\r\n  keyVal,\r\n  options,\r\n}) {\r\n  const classNamees = useStyles();\r\n\r\n  const [value, setValue] = useState('');\r\n\r\n  const onInputChange = useCallback(\r\n    (e, value, reason) => {\r\n      if (['reset', 'input'].includes(reason)) {\r\n        onChange(value, keyVal);\r\n        console.log('keyVal', keyVal);\r\n        setValue(value);\r\n      }\r\n      if (reason === 'clear') {\r\n        onChange(undefined, keyVal);\r\n        setValue('');\r\n      }\r\n    },\r\n    [setValue, keyVal, onChange]\r\n  );\r\n\r\n  return (\r\n    <Autocomplete\r\n      classNameName={classNamees.root}\r\n      value={value}\r\n      options={options}\r\n      getOptionSelected={(option) => option}\r\n      onInputChange={onInputChange}\r\n      renderInput={(params) => (\r\n        <TextField {...params} label={label} variant=\"outlined\" />\r\n      )}\r\n    />\r\n  );\r\n}\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\n\r\nimport SearchName from '../SearchPanel/SearhName/SearchName';\r\nimport AutocompleteCustom from '../AutocomleteCustom/AutocompleteCustom';\r\nimport { NATIONALITIES } from '../../Constats/Nationalities/nationalities';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    padding: theme.spacing(2),\r\n  },\r\n  containerGrid: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    maxWidth: '70%',\r\n  },\r\n  itemFilter: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function SearchPanel({\r\n  setFiltered,\r\n  getFullName,\r\n  helperOnChangeFilter,\r\n}) {\r\n  const classNamees = useStyles();\r\n\r\n  const handleResetFiltersAll = () => {\r\n    setFiltered();\r\n  };\r\n\r\n  const nationalityList = Object.entries(NATIONALITIES).map(\r\n    (key) => key[1].nat\r\n  );\r\n\r\n  return (\r\n    <Paper>\r\n      <Grid classNameName={classNamees.root}>\r\n        <Grid container spacing={2} classNameName={classNamees.containerGrid}>\r\n          <Grid item classNameName={classNamees.itemFilter}>\r\n            <SearchName getFullName={getFullName} />\r\n          </Grid>\r\n          <Grid item classNameName={classNamees.itemFilter}>\r\n            <AutocompleteCustom\r\n              options={['male', 'female']}\r\n              keyVal={'gender'}\r\n              label={'Gender'}\r\n              onChange={helperOnChangeFilter}\r\n            />\r\n          </Grid>\r\n          <Grid item classNameName={classNamees.itemFilter}>\r\n            <AutocompleteCustom\r\n              options={nationalityList}\r\n              keyVal={'nat'}\r\n              label={'Nationality'}\r\n              onChange={helperOnChangeFilter}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <Grid>\r\n          <Tooltip title=\"Reset filters\" arrow placement=\"top\">\r\n            <IconButton onClick={handleResetFiltersAll}>\r\n              <ClearIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n}\r\n","export const TABLE_VIEW_STATUS = {\r\n  TABLE: 'table',\r\n  GRID: 'grid',\r\n};\r\n\r\nexport const GENDER_VALUE = {\r\n  MALE: 'male',\r\n  FEMALE: 'female',\r\n  INDETERMINATE: 'indeterminate',\r\n  NOBODY: 'nobody',\r\n};\r\n","import {\r\n  Paper,\r\n  TableContainer,\r\n  Table,\r\n  TableRow,\r\n  TableCell,\r\n  Typography,\r\n  TableBody,\r\n} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport { NATIONALITIES } from '../../Constats/Nationalities/nationalities';\r\nimport { GENDER_VALUE } from '../Constants/constants';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  footerContainer: {\r\n    padding: theme.spacing(2),\r\n    color: theme.palette.text.secondary,\r\n    display: 'flex',\r\n    justifyContent: 'flex-start',\r\n    flexDirection: 'column',\r\n  },\r\n  footerTableContainer: {\r\n    width: '500px',\r\n  },\r\n  typographyPredominate: {\r\n    backgroundColor: 'yellow',\r\n    width: '130px',\r\n    fontSize: '14px',\r\n    align: 'center',\r\n  },\r\n  typograthyBox: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n  rowFirstTable: {\r\n    fontSize: '24px',\r\n  },\r\n  tableCellGender: {\r\n    fontWeight: 'bold',\r\n    fontSize: '24px',\r\n  },\r\n}));\r\n\r\nconst Footer = ({ data }) => {\r\n  const classNamees = useStyles();\r\n\r\n  const genderCollections = data.reduce(\r\n    (acc, el) => {\r\n      switch (el.gender) {\r\n        case GENDER_VALUE.MALE:\r\n          return { ...acc, male: acc.male + 1 };\r\n        case GENDER_VALUE.FEMALE:\r\n          return { ...acc, female: acc.female + 1 };\r\n        case GENDER_VALUE.INDERMINATE:\r\n          return { ...acc, indeterminate: acc.indeterminate + 1 };\r\n        default:\r\n          return acc;\r\n      }\r\n    },\r\n    { male: 0, female: 0, indeterminate: 0 }\r\n  );\r\n\r\n  const genderPredominate = () => {\r\n    if (maleNum > femaleNum && maleNum > indeterminateNum) {\r\n      return GENDER_VALUE.MALE;\r\n    }\r\n    if (maleNum < femaleNum && femaleNum > indeterminateNum) {\r\n      return GENDER_VALUE.FEMALE;\r\n    }\r\n    if (maleNum < indeterminateNum && indeterminateNum > femaleNum) {\r\n      return GENDER_VALUE.INDERMINATE;\r\n    }\r\n    return GENDER_VALUE.NOBODY;\r\n  };\r\n\r\n  const allNum = data.length;\r\n  const maleNum = genderCollections.male;\r\n  const femaleNum = genderCollections.female;\r\n  const indeterminateNum = genderCollections.indeterminate;\r\n\r\n  const nationalitiesCollections = data.reduce(\r\n    (acc, el) => {\r\n      return { ...acc, [el.nat]: acc[el.nat] + 1 };\r\n    },\r\n    {\r\n      AU: 0,\r\n      BR: 0,\r\n      CA: 0,\r\n      CH: 0,\r\n      DE: 0,\r\n      DK: 0,\r\n      ES: 0,\r\n      FI: 0,\r\n      FR: 0,\r\n      GB: 0,\r\n      IE: 0,\r\n      IR: 0,\r\n      NO: 0,\r\n      NL: 0,\r\n      NZ: 0,\r\n      TR: 0,\r\n      US: 0,\r\n    }\r\n  );\r\n\r\n  return (\r\n    <Paper>\r\n      <div classNameName={classNamees.footerContainer}>\r\n        <div classNameName={classNamees.footerTableContainer}>\r\n          <TableContainer>\r\n            <Typography variant=\"h4\">Statictic</Typography>\r\n            <Table>\r\n              <TableBody>\r\n                <TableRow classNameName={classNamees.rowFirstTable}>\r\n                  <TableCell>Collections size </TableCell>\r\n                  <TableCell>Males</TableCell>\r\n                  <TableCell>Females</TableCell>\r\n                  <TableCell>Indeterminate</TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell classNameName={classNamees.tableCellGender}>\r\n                    {allNum}\r\n                  </TableCell>\r\n                  <TableCell classNameName={classNamees.tableCellGender}>\r\n                    {maleNum}\r\n                  </TableCell>\r\n                  <TableCell classNameName={classNamees.tableCellGender}>\r\n                    {femaleNum}\r\n                  </TableCell>\r\n                  <TableCell classNameName={classNamees.tableCellGender}>\r\n                    {indeterminateNum}\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          <Box classNameName={classNamees.typograthyBox}>\r\n            <Typography classNameName={classNamees.typographyPredominate}>\r\n              {genderPredominate()} predominate\r\n            </Typography>\r\n          </Box>\r\n        </div>\r\n        <div>\r\n          <Typography variant=\"h5\">Nationality</Typography>\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            alignItems=\"center\"\r\n          >\r\n            {Object.entries(nationalitiesCollections)\r\n              .filter(([_, value]) => value)\r\n              .map(([key, value]) => {\r\n                return (\r\n                  <div key={key}>\r\n                    <div>{NATIONALITIES[key].nat}:</div>\r\n                    <div>{value} contacts</div>\r\n                  </div>\r\n                );\r\n              })}\r\n          </Box>\r\n        </div>\r\n      </div>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nimport TableNationality from '../TableNationality/TableNationality';\r\nimport CopyToClipBoard from '../CopyToClipboardText/CopyToClipBoardText';\r\n\r\nimport { format } from 'date-fns';\r\nimport parseISO from 'date-fns/parseISO';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainContainer: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-around',\r\n  },\r\n  cardContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    flexDirection: 'column',\r\n    padding: theme.spacing(3),\r\n    marginBottom: theme.spacing(2),\r\n    minWidth: '45%',\r\n    maxWidth: '45%',\r\n  },\r\n  large: {\r\n    width: theme.spacing(20),\r\n    height: theme.spacing(20),\r\n  },\r\n  cardnameContainer: {\r\n    margin: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function PersonalCard({ data }) {\r\n  const classNamees = useStyles();\r\n\r\n  return (\r\n    <Box classNameName={classNamees.mainContainer}>\r\n      {data.map((person) => (\r\n        <Box key={person.login.uuid} classNameName={classNamees.cardContainer}>\r\n          <Avatar\r\n            classNameName={classNamees.large}\r\n            src={person.picture.large}\r\n          />\r\n          <Box classNameName={classNamees.cardnameContainer}>\r\n            <Typography variant=\"h3\">\r\n              {person.name.title} {person.name.first} {person.name.last}\r\n            </Typography>\r\n          </Box>\r\n          <TableContainer component={Paper}>\r\n            <Table\r\n              classNameName={classNamees.table}\r\n              size=\"small\"\r\n              aria-label=\"a dense table\"\r\n            >\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell align=\"center\">Birthday</TableCell>\r\n                  <TableCell align=\"center\">Email</TableCell>\r\n                  <TableCell aalign=\"center\">Phone</TableCell>\r\n                  <TableCell align=\"center\">Location</TableCell>\r\n                  <TableCell align=\"center\">Nationality</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                <TableRow>\r\n                  <TableCell classNameName={classNamees.tableCell} align=\"left\">\r\n                    <Typography>\r\n                      {format(\r\n                        parseISO(person.dob.date),\r\n                        'EEEE, M/d/yyyy, K-mm a'\r\n                      )}\r\n                    </Typography>\r\n                    <Typography>{person.dob.age} years</Typography>\r\n                  </TableCell>\r\n                  <TableCell classNameName={classNamees.tableCell} align=\"left\">\r\n                    <CopyToClipBoard text={person.email}></CopyToClipBoard>{' '}\r\n                  </TableCell>\r\n                  <TableCell classNameName={classNamees.tableCell} align=\"left\">\r\n                    <CopyToClipBoard text={person.cell}></CopyToClipBoard>\r\n                  </TableCell>\r\n                  <TableCell classNameName={classNamees.tableCell} align=\"left\">\r\n                    <Typography>/{person.location.country}/</Typography>\r\n                    <Typography>\r\n                      {person.location.state}, {person.location.city},\r\n                    </Typography>\r\n                    <Typography>\r\n                      {person.location.street.name}\r\n                      {person.location.street.number}\r\n                    </Typography>\r\n                  </TableCell>\r\n                  <TableCell\r\n                    classNameName={classNamees.tableCell}\r\n                    align=\"right\"\r\n                  >\r\n                    <TableNationality person={person.nat} />\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </Box>\r\n      ))}\r\n    </Box>\r\n  );\r\n}\r\n","import { useCallback } from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      marginTop: theme.spacing(2),\r\n      display: 'flex',\r\n      justifyContent: 'flex-end',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function PaginationsPage({ onChange, pageCount }) {\r\n  const classNamees = useStyles();\r\n\r\n  const handleChangePage = useCallback(\r\n    (_, page) => {\r\n      onChange(page);\r\n    },\r\n    [onChange]\r\n  );\r\n\r\n  return (\r\n    <div classNameName={classNamees.root}>\r\n      <Pagination\r\n        count={pageCount}\r\n        shape=\"rounded\"\r\n        onChange={handleChangePage}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import { useMemo, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Grid from '@material-ui/core/Grid';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport ContactsTable from '../ContactsTable/ContactsTable';\nimport Header from '../Header/Header';\nimport SearchPanel from '../SearchPanel/SearchPanel';\nimport Footer from '../Footer/Footer';\nimport PersonalCard from '../PersonalCard/PersonalCard';\nimport PaginationsPage from '../PaginationsPage/PaginationsPage';\nimport { useFetchData } from './useFetchData';\nimport { NATIONALITIES } from '../../Constats/Nationalities/nationalities';\nimport { TABLE_VIEW_STATUS } from '../Constants/constants';\n\nconst { TABLE, GRID } = TABLE_VIEW_STATUS;\n\nconst useStyles = makeStyles((theme) => ({\n  appGrid: {\n    padding: theme.spacing(4),\n    color: theme.palette.text.secondary,\n  },\n}));\n\nconst getTableViewMode = () => {\n  return localStorage.getItem('tableViewMode') || TABLE;\n};\n\nfunction HomePage() {\n  const classNamees = useStyles();\n  const { data, isLoading, isError, reloadFetch } = useFetchData();\n  const [filtered, setFiltered] = useState();\n  const [tableView, setTableView] = useState(getTableViewMode);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const rowsPerPage = 10;\n\n  const helperFilteredData = (data = [], activeFilters = {}) => {\n    return data.reduce((acc, el) => {\n      const valueActive = Object.entries(activeFilters).every(\n        ([key, value]) => {\n          if (!value) {\n            return true;\n          }\n          const currentValue = el[key];\n          if (typeof currentValue === 'object') {\n            return Object.values(currentValue).join(' ').includes(value);\n          }\n          return `${el[key]}` === value;\n        }\n      );\n      if (valueActive) {\n        return [...acc, el];\n      }\n      return acc;\n    }, []);\n  };\n\n  const dataAfterFilter = useMemo(() => helperFilteredData(data, filtered), [\n    data,\n    filtered,\n  ]);\n\n  const dataPerPage = useMemo(\n    () =>\n      dataAfterFilter.slice(\n        currentPage * rowsPerPage - rowsPerPage,\n        currentPage * rowsPerPage\n      ),\n    [currentPage, rowsPerPage, dataAfterFilter]\n  );\n\n  const totalRows = useMemo(() => dataAfterFilter.length, [dataAfterFilter]);\n\n  const pageCount = useMemo(() => Math.ceil(totalRows / rowsPerPage), [\n    totalRows,\n    rowsPerPage,\n  ]);\n\n  const transformNationality = (val) => {\n    if (val) {\n      let transformValue = Object.entries(NATIONALITIES).filter(\n        (el) => el[1].nat === val\n      );\n      return transformValue[0][0];\n    }\n  };\n\n  const helperOnChangeFilter = (val, key) => {\n    if (key === 'gender') {\n      setFiltered({ ...filtered, [key]: val });\n      setCurrentPage(1);\n    }\n    if (key === 'nat') {\n      const nationalities = transformNationality(val);\n      setFiltered({ ...filtered, [key]: nationalities });\n      setCurrentPage(1);\n    }\n  };\n\n  const getFullName = (name) => {\n    if (name) {\n      setFiltered({ ...filtered, name: name });\n      setCurrentPage(1);\n    }\n  };\n\n  const handlerPageNumber = (numPage) => {\n    setCurrentPage(numPage);\n  };\n\n  return (\n    <div classNameName={classNamees.root}>\n      <Grid>\n        <Grid classNameName={classNamees.appGrid} item xs={12}>\n          <Header\n            tableView={tableView}\n            setTableView={setTableView}\n            reloadFetch={reloadFetch}\n          />\n        </Grid>\n        <Grid classNameName={classNamees.appGrid} item xs={12}>\n          <SearchPanel\n            setFiltered={setFiltered}\n            getFullName={getFullName}\n            helperOnChangeFilter={helperOnChangeFilter}\n          />\n        </Grid>\n        {isLoading ? (\n          <Grid classNameName={classNamees.appGrid} item xs={12}>\n            <CircularProgress />\n          </Grid>\n        ) : isError ? (\n          <Grid classNameName={classNamees.appGrid} item xs={12}>\n            ...Error\n          </Grid>\n        ) : (\n          <>\n            <Grid classNameName={classNamees.appGrid} item xs={12}>\n              {tableView === TABLE && <ContactsTable data={dataPerPage} />}\n              {tableView === GRID && (\n                <PersonalCard data={dataPerPage} tableView={tableView} />\n              )}\n            </Grid>\n            <Grid classNameName={classNamees.appGrid} item xs={12}>\n              <Footer data={dataAfterFilter} />\n            </Grid>\n            {/* <ContactsTableCopy data={dataPerPage} /> */}\n          </>\n        )}\n        <Grid classNameName={classNamees.appGrid} item xs={12}>\n          <PaginationsPage onChange={handlerPageNumber} pageCount={pageCount} />\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default HomePage;\n","import { useState, useEffect } from 'react';\r\n\r\nexport const useFetchData = () => {\r\n  const [data, setData] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isError, setIsError] = useState(false);\r\n  const [countReload, setCountReload] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const getContacts = async () => {\r\n      try {\r\n        setIsLoading(true);\r\n        const response = await fetch('https://randomuser.me/api/?results=47');\r\n        const { results, error } = await response.json();\r\n        if (error) {\r\n          throw new Error(error);\r\n        }\r\n        setData(results);\r\n        setIsError(false);\r\n      } catch (e) {\r\n        setIsError(true);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    getContacts();\r\n  }, [countReload]);\r\n\r\n  const reloadFetch = () => {\r\n    setCountReload(countReload + 1);\r\n  };\r\n\r\n  return {\r\n    data,\r\n    isLoading,\r\n    isError,\r\n    reloadFetch,\r\n  };\r\n};\r\n","import './App.css';\r\nimport HomePage from './Components/HomePage/HomePage';\r\n\r\nconst App = () => {\r\n  return <HomePage />;\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <div>\n    <App />\n  </div>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}